# This pipeline can be used as a reference\template (wiht minor changes) for components that do not have a sonarqube project. 
# The steps defined in this pipeline include build, unit tests, deploy and run postman tests (postman is commented out below)
# The vars needed to be added to the project are: CSPROJ_PATH & COMPONENT. Check bb cloud vars to see the values used
# The pipeline contains other vars used in the pipeline. Static vars like: $SLN_PATH, OCTOPUS_SERVER, OCTOPUS_APIKEY 
# have been added to the root of the bb locud instance (vitacare), since they are shared throughout many components
# There are also system vars that are used: BITBUCKET_REPO_SLUG, 
image: mcr.microsoft.com/dotnet/sdk:6.0
clone:
  enabled: true
  lfs: false
  depth: full
definitions:
  caches:
    sonar: ~/.sonar
  steps:
    - step: &semver
        name: Get SemVer
        runs-on: 
          - 'self.hosted'
          - 'linux'
          - "active"
        script:
        - dotnet new tool-manifest --force
        - dotnet tool install GitVersion.Tool --version 5.10.3
        - dotnet tool restore
        - dotnet gitversion /output buildserver
        - source gitversion.properties
        - echo SemVer generated by GitVersion $GITVERSION_FULLSEMVER.$BITBUCKET_BUILD_NUMBER
        artifacts:
          - gitversion.properties
    - step: &build
        name: Build, Publish & Run Unit Test
        runs-on: 
          - 'self.hosted'
          - 'linux'
          - "active"
        script:
        - dotnet clean $SLN_PATH --configuration $CONFIG
        - dotnet restore $SLN_PATH 
        - dotnet build $SLN_PATH --configuration $CONFIG 
        - dotnet publish $CSPROJ_PATH --output published --no-build --configuration $CONFIG
        - dotnet test $SLN_PATH --configuration $CONFIG
        artifacts:
          - published/**
    - step: &deploy
        name: Octopus Pack, Push & Deploy
        image: octopusdeploy/octo:6.17.3-alpine
        runs-on:
        - "self.hosted"
        - "linux"
        - "active"
        script:
          - source gitversion.properties
          - echo Octopus will pack, push and deploy package as version $GITVERSION_FULLSEMVER.$BITBUCKET_BUILD_NUMBER
          - export VERSION=$GITVERSION_FULLSEMVER.$BITBUCKET_BUILD_NUMBER
          - echo "using $DEPLOYMENT_ENVIRONMENT deploy $BITBUCKET_REPO_SLUG."
          - apk update
          - apk add git
          - apk add openssh-client
          - git clone git@bitbucket.org:vitacarerx/config.git
          - cp -R config/component/$COMPONENT/*.json published/
          - octo pack --id $BITBUCKET_REPO_SLUG --version $VERSION --outFolder ./out --format nupkg --basePath published
          - octo push --package ./out/$BITBUCKET_REPO_SLUG.$VERSION.nupkg --server $OCTOPUS_SERVER --apiKey $OCTOPUS_APIKEY
          - octo create-release --server $OCTOPUS_SERVER --apiKey $OCTOPUS_APIKEY --project $BITBUCKET_REPO_SLUG --packageVersion $VERSION --version $VERSION --deployto $DEPLOYMENT_ENVIRONMENT --enableservicemessages --progress
          - echo export BITBUCKET_DEPLOYMENT_ENVIRONMENT=$BITBUCKET_DEPLOYMENT_ENVIRONMENT >> shared_vars.sh
        artifacts:
          - out/**
          - shared_vars.sh
    - step: &postman_step
        name: Execute Postman Integration Tests
        image: postman/newman:5.3.1-alpine
        runs-on:
          - "self.hosted"
          - "linux"
          - "active"
        script:
          - source shared_vars.sh
          - cd test
          - newman --version
          - npm i -g newman-reporter-htmlextra
          - newman run $BITBUCKET_REPO_SLUG.postman_collection.json -e $BITBUCKET_REPO_SLUG.postman_environment.json -n 1 --reporters  "cli,htmlextra" --reporter-htmlextra-title "Newman Report" --reporter-htmlextra-export newman/report.html --env-var baseUrl=https://$BITBUCKET_DEPLOYMENT_ENVIRONMENT-$COMPONENT.coracare.vitacarerx.com
        artifacts:
          - test/newman**
options:
  max-time: 10
  size: 1x
pipelines:
  default:
    - step: *build
  custom:
    deploy:
      - variables:
          - name: DEPLOYMENT_ENVIRONMENT
            default: "COFY"
            allowed-values:
              - "COFY"
              - "DEV"
              - "INT"
              - "PATCH"
              - "QA"
              - "TACO"
              - "UAT"
      - step: *semver
      - step: *build
      - step: *deploy
      # - step: *postman_step